(defwidget bar [monitor]
    (centerbox  
      :class "main-bar"
      (left :monitor monitor)
      (datetime)
      (right :monitor monitor)))
  
(defwidget left [monitor]
  (box 
    :space-evenly false
    :spacing 5
    :halign "start"
    (launcher)
    (box
      :class "block workspaces"
      :space-evenly false
      (workspaces :monitor monitor)
      (mode))
    ;(window)
    (update))) 

(defwidget right [monitor]
  (box 
    :space-evenly false
    :spacing 5
    :halign "end"
    (music)
    ;(settings)
    ; (battery 
    ;   :monitor monitor)
    (_volume 
      :volume volume
      :monitor monitor)
    (tray)))

(defwidget launcher []
  (eventbox
    :cursor "help"
    (button 
      :class "block launcher"
      :onclick "rofi -show drun &"
      :onrightclick "~/.config/rofi/powermenu.sh &"
      (image
        :path "/home/yumio/.dotfiles/eww/smolmiji.png"
        :image-height 25
        :image-width 25))))

(defwidget workspaces [monitor]
  (label
      :text workspaces))

(defwidget mode []
  (box
    :class "mode"
    :space-evenly false
    :halign "end"
    (label
      :class "separator"
      :visible {mode == "default" ? false : true}
      :text "|")
    (label
      :visible {mode == "default" ? false : true}
      :text "${mode}")))

(defwidget window []
  (label 
    :class "block" 
    :visible {window != "" ? true : false}
    :text "${window}"))

(defwidget datetime []
  (label
    :class "block"
    :text "${datetime}"))

(defwidget music []
  (box
    :class "block music"
    :space-evenly false
    (label 
      :class "song-title"
      :visible {player.player ? true : false} 
      :text "${player.title}")
    (label 
      :class "separator" 
      :visible {player.player ? true : false} 
      :text "|") 
    (eventbox
      :cursor "pointer"
      (button
        :class "song-prev"
        :visible {player.player ? true : false}
        :onclick "playerctl -p spotify,mpd previous"
        "󰎇"))
    (eventbox
      :cursor "pointer"
      (button
        :visible {player.player ? true : false}
        :onclick "playerctl -p spotify,mpd play-pause" 
        (label :text {player.playing ? "" : "契"})))
    (eventbox
      :cursor "pointer"
      (button
        :class "song-next"
        :visible {player.player ? true : false}
        :onclick "playerctl -p spotify,mpd next"
        "󰎇"))
    (label 
      :class "separator" 
      :visible {player.player ? true : false} 
      :text "|") 
    (eventbox
      :cursor "pointer"
      (button
        :class {player.player ? "launch-music" : "launch-music closed"}
        :onclick "~/.config/eww/scripts/open-spotify.sh &"
        "󰎇"))))

(defwidget settings []
  (box
    :class "block"
    (button
      :onclick "~/.config/eww/scripts/open-bluetooth.sh ${bluetoothopen} &"
      "BL")))

; (defwidget battery [monitor]
;   (box
;     :class "block battery"
;     (eventbox
;       :onhover "eww update batterypercent=${monitor}"
;       :onhoverlost "eww update batterypercent=false"
;       (box
;         :class "battery-inner"
;         :space-evenly false
;         (label 
;           :class "battery-icon" 
;           :text "${battery.icon}")
;         (revealer
;           :class "battery-percent"
;           :transition "slideright"
;           :reveal {batterypercent == monitor}
;           "${battery.percent}%")))))

(defwidget _volume [volume monitor]
	(box
		:class "block _volume"
    (eventbox
      :cursor "ns-resize"
      :onhover "eww update volpercent=${monitor}"
      :onhoverlost "eww update volpercent=false"
      :onclick "pavucontrol &"
      :onscroll "~/.config/eww/scripts/volume-control.sh {}"
      (box
        :class "volume-inner"
        :space-evenly false
		    (label 
          :class "volume-icon"
          :text {volume <= 0 ? "󰝟" :
			      volume < 33 ? "󰕿" :
			  	  volume < 66 ? "󰖀" : "󰕾"})
        (revealer
          :class "volume-percent"
          :reveal {volpercent == monitor}
          :transition "slideright"
		      (label :text "${volume}%"))))))

(defwidget tray []
  (box
    :class "block tray"
    (eventbox
      :cursor "pointer"
      (button
        :onclick "alacritty &"
        ""))))

(defwidget update []
  (eventbox
    :cursor "pointer"
    :class "block update"
    :onclick "eww update updates=\"\" && ~/.config/eww/scripts/update.sh update &"
    :visible {updates != ""}
    (box
      :class "update-box"
      (label
        :text updates))))